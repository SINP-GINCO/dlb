# Services config for the Ginco part of the application

# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html

parameters:
#    parameter_name: value

services:
    ginco.integration_service:
        class: Ign\Bundle\GincoBundle\Services\Integration
        arguments: ["@=service('ginco.configuration_manager').getConfig('integrationService_url', 'http://localhost:8080/GincoIntegrationService/')"]
        calls:
          - [setLogger, ['@logger']]

    # CAS authenticator
    ginco.cas_authenticator:
      class: Ign\Bundle\GincoBundle\Security\CasAuthenticator
      arguments: ["@doctrine", "@ginco.configuration_manager", "@ginco.inpn_user_updater", "@logger"]

    ginco.inpn_user_updater:
      class: Ign\Bundle\GincoBundle\Services\INPNUserUpdater
      arguments: ["@doctrine", "@ginco.configuration_manager", "@ginco.inpn_provider_service", "@logger"]

    # Get anonymous user
    app.anonymous_user:
      class: Ign\Bundle\GincoBundle\Services\AnonymousUser
      arguments: ["@doctrine", "visiteur"]

    # Service used to encode a challenge for the user login
    ginco.challenge_response_encoder:
        class: Ign\Bundle\GincoBundle\Services\ChallengeResponseEncoder
        arguments:
            session: "@session"
            logger: "@logger"

    # Service used to read the application parameters from the database
    ginco.configuration_manager:
        class: Ign\Bundle\GincoBundle\Services\ConfigurationManager
        arguments:
            em: "@doctrine.orm.entity_manager"
            logger: "@logger"

    # Service used to read the breadcrumbs config
    ginco.breadcrumb_config_service:
        class: Ign\Bundle\GincoBundle\Services\BreadcrumbsConfigService
        arguments: ["@router", "%kernel.root_dir%/config/breadcrumb.yml"]

    # Listener for the breadcrumb
    ginco.breadcumb_listener:
        class: Ign\Bundle\GincoBundle\EventListener\BreadcrumbListener
        arguments: ["@white_october_breadcrumbs", "@ginco.breadcrumb_config_service"]
        tags:
            - { name: kernel.event_subscriber }

    # Listener for the user locale (todo: unused now the site is just in french ?)
    ginco.locale_listener:
        class: Ign\Bundle\GincoBundle\EventListener\LocaleListener
        arguments: ['%kernel.default_locale%']
        tags:
            - { name: kernel.event_subscriber }

    # Listener for the schema (todo: unused ?)
    ginco.schema_listener:
        class: Ign\Bundle\GincoBundle\EventListener\SchemaListener
        tags:
            - { name: kernel.event_subscriber }

    # Repositories not linked to a specific entity
    ginco.generic_repository:
        abstract: true
        class: Ign\Bundle\GincoBundle\Repository\GenericRepository
        arguments: ["@doctrine.orm.entity_manager"]

    ginco.repository.database.metadata:
        parent: ginco.generic_repository
        class: Ign\Bundle\GincoBundle\Repository\Database\MetadataRepository

    ginco.repository.database.postgresql:
        parent: ginco.generic_repository
        class: Ign\Bundle\GincoBundle\Repository\Database\PostgresqlRepository

    ginco.repository.mapping.map:
        parent: ginco.generic_repository
        class: Ign\Bundle\GincoBundle\Repository\Mapping\MapRepository

    # Managers
    ginco.manager.generic:
        class: Ign\Bundle\GincoBundle\Manager\GenericManager
        arguments: ["@doctrine.orm.metadata_entity_manager","@doctrine.orm.raw_data_entity_manager","@ginco.generic_service", "@ginco.configuration_manager"]
        calls:
          - [setLogger, ['@logger']]

    ginco.manager.query:
        class: Ign\Bundle\GincoBundle\Manager\QueryManager
        arguments: ["@doctrine.orm.metadata_entity_manager","@doctrine.orm.raw_data_entity_manager","@ginco.query_service","@ginco.configuration_manager"]
        calls:
          - [setLogger, ['@logger']]

    # Services
    ginco.generic_service:
        class: Ign\Bundle\GincoBundle\Services\GenericService
        arguments: ["@doctrine.orm.metadata_entity_manager","@ginco.configuration_manager", "@logger", "%locale%"]

    ginco.query_service:
        class: Ign\Bundle\GincoBundle\Services\QueryService
        arguments: ["@doctrine", "@ginco.generic_service" ,"@ginco.configuration_manager", "@logger", "%locale%", "RAW_DATA", "@ginco.manager.generic", "@ginco.repository.mapping.map"]

    ginco.submission_service:
      class: Ign\Bundle\GincoBundle\Services\SubmissionService
      arguments: ["@logger", "@ginco.configuration_manager", "@ginco.generic_service","@ginco.query_service", "@doctrine.orm.raw_data_entity_manager", "@doctrine.orm.metadata_entity_manager", "@translator"]

    ginco.ogr2ogr:
      class: Ign\Bundle\GincoBundle\Services\Ogr2ogr
      arguments: ["@logger", "@ginco.configuration_manager"]

    ginco.inpn_provider_service:
      class: Ign\Bundle\GincoBundle\Services\INPNProviderService
      arguments: ["@doctrine", "@ginco.configuration_manager", "@logger"]

    # RabbitMQ Decorated Producer
    ginco.decorating_ginco_generic_producer:
      class: Ign\Bundle\GincoBundle\Services\RabbitMQ\GenericProducer
      decorates: old_sound_rabbit_mq.ginco_generic_producer
      arguments: ['@ginco.decorating_ginco_generic_producer.inner', '@doctrine.orm.entity_manager']
      public: false

    # RabbitMQ Consumers
    generic_consumer_service:
        class: Ign\Bundle\GincoBundle\Services\RabbitMQ\GenericConsumer
        arguments: ["@doctrine.orm.entity_manager","@ginco.configuration_manager", "@logger", "@=service('ginco.locale_listener').getLocale()"]
        calls:
          - [setDEEProcess, ['@ginco.dee_process']]
          - [setExportCSV, ['@ginco.export_csv']]

    #templatehelper
    ginco.helper.AddLink:
        class: Ign\Bundle\GincoBundle\Helper\GenerateAddLink
        # the tag alias is later used in the view to access your service
        tags:
            - { name: templating.helper, alias: dataEditionAdd }

    ginco.helper.EditLink:
        class: Ign\Bundle\GincoBundle\Helper\GenerateEditLink
        # the tag alias is later used in the view to access your service
        tags:
            - { name: templating.helper, alias: dataEditionEdit }

    GincoBundle.login_entry_point:
        class: Ign\Bundle\GincoBundle\EventListener\LoginEntryPoint
        arguments: [ "@router" ]

    app.exception_controller:
        class: Ign\Bundle\GincoBundle\Controller\ExceptionController
        arguments: ['@twig', '%kernel.debug%']

#    ginco.ajaxError:
#        class: Ign\Bundle\GincoBundle\EventListener\AjaxErrorListener
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception, priority: 1000 }


    # Twig extensions
    twig.extension.text:
      class: Twig_Extensions_Extension_Text
      tags:
        - { name: twig.extension }

    ginco.help_link_extension:
        class: Ign\Bundle\GincoBundle\Twig\HelpLinkExtension
        public: false
        arguments: ["%kernel.root_dir%/config/help.yml"]
        tags:
            - { name: twig.extension }

    ginco.parse_url_extension:
        class: Ign\Bundle\GincoBundle\Twig\ParseUrlExtension
        public: false
        tags:
            - { name: twig.extension }

    ginco.pathinfo_extension:
        class: Ign\Bundle\GincoBundle\Twig\PathInfoExtension
        public: false
        tags:
            - { name: twig.extension }

    # Mail Manager
    app.mail_manager:
        class: Ign\Bundle\GincoBundle\Services\MailManager
        arguments: ["@mailer", "@twig", "@logger", "noreply@ign.fr", "@=service('ginco.configuration_manager').getConfig('site_name', 'Plateforme GINCO')"]

    # Service reading and parsing the xml metadata files from INPN metadata application
    ginco.metadata_reader:
        class: Ign\Bundle\GincoBundle\Services\MetadataReader
        arguments: ["@ginco.configuration_manager","@logger"]

    # Service generating DEE
    ginco.dee_generator:
        class: Ign\Bundle\GincoBundle\Services\DEEGeneration\DEEGenerator
        arguments: ["@doctrine.orm.entity_manager","@ginco.configuration_manager", "@ginco.generic_service", "@ginco.query_service","@logger"]

    # Service doing the whole process of generating and sending the DEE file
    ginco.dee_process:
        class: Ign\Bundle\GincoBundle\Services\DEEGeneration\DEEProcess
        arguments: ["@doctrine.orm.entity_manager","@ginco.configuration_manager", "@ginco.dee_generator", "@app.mail_manager","@logger"]
        
    # Service doing the whole process of generating and sending the export file
    ginco.export_csv:
        class: Ign\Bundle\GincoBundle\Services\ExportCSV
        arguments: ["@doctrine.orm.entity_manager","@ginco.configuration_manager", "@app.mail_manager", "@ginco.query_service", "@logger", "@=service('ginco.locale_listener').getLocale()", "@translator"]

    # Forms
    form.type.link_file:
        class: Ign\Bundle\GincoBundle\Form\Components\LinkFileType
        arguments: ['%kernel.root_dir%/../web/upload']
        tags:
            - { name: form.type }

    form.type.image:
        class: Ign\Bundle\GincoBundle\Form\Components\ImageType
        arguments: ['%kernel.root_dir%/../web/upload']
        tags:
            - { name: form.type }

    validator.unique.epsg_code:
      class: Ign\Bundle\GincoBundle\Validator\Constraints\EPSGCodeValidator
      tags:
        - {  name: validator.constraint_validator }
      arguments: ["@doctrine.orm.entity_manager"]